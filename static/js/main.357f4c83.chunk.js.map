{"version":3,"sources":["components/TodoItem.js","todosData.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["TodoItem","props","className","type","onChange","handleChange","item","id","style","completed","fontStyle","color","textDecoration","text","todosData","Header","Footer","App","state","todos","bind","this","setState","prevState","todo","map","console","log","todoItems","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPA2BeA,MApBf,SAAkBC,GAOd,OACI,yBAAKC,UAAU,oBACX,2BAAQC,KAAK,WACXC,SAAU,kBAAMH,EAAMI,aAAaJ,EAAMK,KAAKC,OAEzD,0BAAML,UAAU,gBAAgBM,MAAOP,EAAMK,KAAKG,UAX7B,CACtBC,UAAW,UACXC,MAAO,UACPC,eAAgB,gBAQgE,MAC9EX,EAAMK,KAAKO,MALP,IAMG,+BCOIC,EA5BG,CACd,CACIP,GAAG,EACHM,KAAK,qCACLJ,WAAW,GAEf,CACIF,GAAG,EACHM,KAAK,oBACLJ,WAAW,GAEf,CACIF,GAAG,EACHM,KAAK,8BACLJ,WAAW,GAEf,CACIF,GAAG,EACHM,KAAK,gDACLJ,WAAW,GAEf,CACIF,GAAG,EACHM,KAAK,oCACLJ,WAAW,ICZJM,MATf,WACC,OACC,yBAAKb,UAAU,kBACd,wDCMYc,MATf,WACC,OACC,yBAAKd,UAAU,kBACd,oFC+CYe,E,YA7Cb,aAAc,IAAD,8BACX,+CACKC,MAAQ,CACTC,MAAOL,GAEX,EAAKT,aAAa,EAAKA,aAAae,KAAlB,gBALP,E,0EAQAb,GACTc,KAAKC,UAAU,SAAAC,GAQX,MAAO,CACHC,KARiBD,EAAUJ,MAAMM,KAAI,SAAAD,GAKrC,OAJGA,EAAKjB,KAAOA,IACbiB,EAAKf,WAAae,EAAKf,UACrCiB,QAAQC,IAAI,OAAQpB,IAEDiB,W,+BAQV,IAAD,OACAI,EAAYP,KAAKH,MAAMC,MAAMM,KAAI,SAAAnB,GAAI,OACzC,kBAAC,EAAD,CACUuB,IAAKvB,EAAKC,GACVD,KAAMA,EACND,aAAc,EAAKA,kBAI/B,OACE,4BACA,yBAAKH,UAAU,eACb,kBAAC,EAAD,MACE,yBAAKA,UAAU,kBAAf,IAAkC0B,EAAlC,KACF,kBAAC,EAAD,Y,GAtCUE,IAAMC,WCaxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.357f4c83.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles.css'\r\n\r\n/* To apply multiple styles to an element use an object and camelcase.  \r\nAlso, use colons after each property name and a comma after it. \r\n*/\r\n\r\nfunction TodoItem(props){\r\n\tconst completedStyle = {\r\n\t\tfontStyle: \"italics\",\r\n\t\tcolor: \"#999999\",\r\n\t\ttextDecoration: \"line-through\"\r\n\t}\r\n\r\n    return(\r\n        <div className=\"TodoItem-wrapper\">  \r\n            <input \ttype=\"checkbox\" \r\n            \t\tonChange={() => props.handleChange(props.item.id)} \r\n\t\t\t/>\r\n\t\t\t<span className=\"TodoItem-text\" style={props.item.completed ? completedStyle : null}>\r\n\t\t\t{props.item.text}\r\n\t\t\t</span> <br/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id:1,\r\n        text:\"Completing ReactJS Practice Course\",\r\n        completed: true\r\n    },\r\n    {\r\n        id:2,\r\n        text:\"Review HTML & CSS\",\r\n        completed: false      \r\n    },    \r\n    {\r\n        id:3,\r\n        text:\"Review JavaScript && jQuery\",\r\n        completed: true     \r\n    },\r\n    {\r\n        id:4,\r\n        text:\"Brush up on other JS Libraries and Frameworks\",\r\n        completed: true      \r\n    },\r\n    {\r\n        id:5,\r\n        text:\"Build a website project each week\",\r\n        completed: true     \r\n    },    \r\n]\r\n\r\nexport default todosData","import React from 'react'\r\nimport '../styles.css'\r\n\r\nfunction Header(){\r\n\treturn(\r\n\t\t<div className=\"Header-wrapper\">\r\n\t\t\t<h2>Class-Based Components</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport '../styles.css'\r\n\r\nfunction Footer(){\r\n\treturn(\r\n\t\t<div className=\"Footer-wrapper\">\r\n\t\t\t<h2>Class-Based Components ReactJS - TaLoveous Goodwin</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Footer","import React from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport todosData from './todosData'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport './styles.css'\r\n\r\nclass App extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n        todos: todosData\r\n    }\r\n    this.handleChange=this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(id) {\r\n      this.setState (prevState => {\r\n          const updatedTodos = prevState.todos.map(todo => {\r\n              if(todo.id === id) {\r\n                todo.completed = !todo.completed \r\n  console.log(\"test\", id)\r\n              }\r\n              return todo\r\n          })\r\n          return {\r\n              todo: updatedTodos\r\n          }\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const todoItems = this.state.todos.map(item => \r\n      <TodoItem \r\n                key={item.id}\r\n                item={item}\r\n                handleChange={this.handleChange}\r\n      />\r\n      )\r\n\r\n    return (\r\n      <h2>\r\n      <div className=\"App-wrapper\">\r\n        <Header />\r\n          <div className=\"todoitems-list\"> {todoItems} </div>\r\n        <Footer />\r\n\r\n      </div>  \r\n      </h2>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}